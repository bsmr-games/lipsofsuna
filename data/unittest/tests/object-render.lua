Unittest:add(2, "system", "render object: model", function()
	local Aabb = require("system/math/aabb")
	local Model = require("system/model-editing")
	local RenderObject = require("system/render-object")
	local Vector = require("system/math/vector")
	-- Checks for valgrind.
	local create_cube_model = function(aabb)
		local model = Model()
		model:add_material{cull = false, shader = "default"}
		model:add_aabb(1, aabb.point, aabb.point + aabb.size)
		model:changed()
		return model
	end
	for i=1,100 do
		local m1 = create_cube_model(Aabb{point = Vector(), size = Vector(3,3,3)})
		local m2 = create_cube_model(Aabb{point = Vector(), size = Vector(6,6,6)})
		local m = m1:copy()
		m:merge(m2)
		local o = RenderObject()
		o:add_model(m)
		o:set_visible(true)
	end
end)

Unittest:add(2, "system", "render object: custom params", function()
	local Model = require("system/model-editing")
	local RenderObject = require("system/render-object")
	local m = Model()
	local o = RenderObject()
	o:add_model(m)
	o:set_visible(true)
	o:set_custom_param(1, 0.5, 0.5, 0.5, 1)
	o:set_custom_param(5, 0.5, 0.5, 0.5, 1)
	o:set_custom_param(5, 0.5, 0.5, 0.5, 1)
	o:set_custom_param(100, 0.5, 0.5, 0.5, 1)
end)

Unittest:add(2, "system", "render object: render queue", function()
	local Model = require("system/model-editing")
	local RenderObject = require("system/render-object")
	local m = Model()
	local o = RenderObject()
	o:add_model(m)
	o:set_visible(true)
	o:set_render_queue("6")
end)
