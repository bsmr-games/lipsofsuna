Unittest:add(1, "system", "image: blit", function()
	local Image = require("system/image")
	local i1 = Image("image.png")
	local i2 = i1:copy()
	assert(i1)
	assert(i2)
	i2:fill(255, 255, 255, 128)
	i1:blit(i2)
	local r,g,b,a = i1:get_pixel(1, 0)
	assert(r == 127 and g == 127 and b == 127 and a == 255)
	local r,g,b,a = i1:get_pixel(31, 31)
	assert(r == 255 and g == 127 and b == 127 and a == 255)
end)

Unittest:add(1, "system", "image: blit_hsv_add", function()
	local Image = require("system/image")
	local i1 = Image("image.png")
	local i2 = i1:copy()
	assert(i1)
	assert(i2)
	i2:fill(255, 0, 0, 255)
	i1:blit_hsv_add(i2, 0.25, 0, 0)
	local r,g,b,a = i1:get_pixel(1, 0)
	assert(r == 127 and g == 254 and b == 0 and a == 255)
	local r,g,b,a = i1:get_pixel(31, 31)
	assert(r == 128 and g == 254 and b == 0 and a == 255)
end)

Unittest:add(1, "system", "image: copy", function()
	local Image = require("system/image")
	local i1 = Image("image.png")
	local i2 = i1:copy()
	assert(i1)
	assert(i2)
	assert(i1 ~= i2)
	for x = 0,31 do
		for y = 0,31 do
			local r1,g1,b1,a1 = i1:get_pixel(x, y)
			local r2,g2,b2,a2 = i2:get_pixel(x, y)
			assert(r1 == r2 and g1 == g2 and b1 == b2 and a1 == a2)
		end
	end
end)

Unittest:add(1, "system", "image: create", function()
	local Image = require("system/image")
	local i = Image(32, 64)
	assert(i)
	assert(i:get_width() == 32)
	assert(i:get_height() == 64)
	local w,h = i:get_size()
	assert(w == 32)
	assert(h == 64)
	local r,g,b,a = i:get_pixel(31, 63)
	assert(r == 0 and g == 0 and b == 0 and a == 0)
end)

Unittest:add(1, "system", "image: fill", function()
	local Image = require("system/image")
	local i = Image("image.png")
	assert(i)
	i:fill(1, 2, 3, 4)
	local r,g,b,a = i:get_pixel(16, 16)
	assert(r == 1 and g == 2 and b == 3 and a == 4)
end)

Unittest:add(1, "system", "image: get_pixel", function()
	local Image = require("system/image")
	local i = Image("image.png")
	assert(i)
	-- Out of bounds reads.
	assert(i:get_pixel(-1, 0) == nil)
	assert(i:get_pixel(0, -1) == nil)
	assert(i:get_pixel(0, 100000) == nil)
	assert(i:get_pixel(100000, 0) == nil)
	assert(i:get_pixel(32, 32) == nil)
	-- Valid reads.
	local r,g,b,a = i:get_pixel(0, 0)
	assert(r == 255 and g == 255 and b == 255 and a == 255)
	local r,g,b,a = i:get_pixel(1, 0)
	assert(r == 0 and g == 0 and b == 0 and a == 255)
	local r,g,b,a = i:get_pixel(31, 31)
	assert(r == 255 and g == 0 and b == 0 and a == 255)
end)

Unittest:add(1, "system", "image: set_pixel", function()
	local Image = require("system/image")
	local i = Image("image.png")
	assert(i)
	-- Out of bounds writes.
	assert(i:set_pixel(-1, 0) == nil)
	assert(i:set_pixel(0, -1) == nil)
	assert(i:set_pixel(0, 100000) == nil)
	assert(i:set_pixel(100000, 0) == nil)
	assert(i:set_pixel(32, 32) == nil)
	-- Valid writes.
	assert(i:set_pixel(0, 0, 255, 128, 64, 32) == true)
	local r,g,b,a = i:get_pixel(0, 0)
	assert(r == 255 and g == 128 and b == 64 and a == 32)
end)
