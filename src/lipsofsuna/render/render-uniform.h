/* Lips of Suna
 * CopyrightÂ© 2007-2010 Lips of Suna development team.
 *
 * Lips of Suna is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Lips of Suna is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Lips of Suna. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef __RENDER_UNIFORM_H__
#define __RENDER_UNIFORM_H__

#include <lipsofsuna/video.h>
#include "render-types.h"

enum
{
	LIREN_UNIFORM_NONE,
	LIREN_UNIFORM_CUBETEXTURE0,
	LIREN_UNIFORM_CUBETEXTURE1,
	LIREN_UNIFORM_CUBETEXTURE2,
	LIREN_UNIFORM_CUBETEXTURE3,
	LIREN_UNIFORM_CUBETEXTURE4,
	LIREN_UNIFORM_CUBETEXTURE5,
	LIREN_UNIFORM_CUBETEXTURE6,
	LIREN_UNIFORM_CUBETEXTURE7,
	LIREN_UNIFORM_CUBETEXTURE8,
	LIREN_UNIFORM_CUBETEXTURE9,
	LIREN_UNIFORM_DIFFUSETEXTURE0,
	LIREN_UNIFORM_DIFFUSETEXTURE1,
	LIREN_UNIFORM_DIFFUSETEXTURE2,
	LIREN_UNIFORM_DIFFUSETEXTURE3,
	LIREN_UNIFORM_DIFFUSETEXTURE4,
	LIREN_UNIFORM_DIFFUSETEXTURE5,
	LIREN_UNIFORM_DIFFUSETEXTURE6,
	LIREN_UNIFORM_DIFFUSETEXTURE7,
	LIREN_UNIFORM_DIFFUSETEXTURE8,
	LIREN_UNIFORM_DIFFUSETEXTURE9,
	LIREN_UNIFORM_LIGHTAMBIENT0,
	LIREN_UNIFORM_LIGHTAMBIENT1,
	LIREN_UNIFORM_LIGHTAMBIENT2,
	LIREN_UNIFORM_LIGHTAMBIENT3,
	LIREN_UNIFORM_LIGHTAMBIENT4,
	LIREN_UNIFORM_LIGHTAMBIENT5,
	LIREN_UNIFORM_LIGHTAMBIENT6,
	LIREN_UNIFORM_LIGHTAMBIENT7,
	LIREN_UNIFORM_LIGHTAMBIENT8,
	LIREN_UNIFORM_LIGHTAMBIENT9,
	LIREN_UNIFORM_LIGHTDIFFUSE0,
	LIREN_UNIFORM_LIGHTDIFFUSE1,
	LIREN_UNIFORM_LIGHTDIFFUSE2,
	LIREN_UNIFORM_LIGHTDIFFUSE3,
	LIREN_UNIFORM_LIGHTDIFFUSE4,
	LIREN_UNIFORM_LIGHTDIFFUSE5,
	LIREN_UNIFORM_LIGHTDIFFUSE6,
	LIREN_UNIFORM_LIGHTDIFFUSE7,
	LIREN_UNIFORM_LIGHTDIFFUSE8,
	LIREN_UNIFORM_LIGHTDIFFUSE9,
	LIREN_UNIFORM_LIGHTDIRECTION0,
	LIREN_UNIFORM_LIGHTDIRECTION1,
	LIREN_UNIFORM_LIGHTDIRECTION2,
	LIREN_UNIFORM_LIGHTDIRECTION3,
	LIREN_UNIFORM_LIGHTDIRECTION4,
	LIREN_UNIFORM_LIGHTDIRECTION5,
	LIREN_UNIFORM_LIGHTDIRECTION6,
	LIREN_UNIFORM_LIGHTDIRECTION7,
	LIREN_UNIFORM_LIGHTDIRECTION8,
	LIREN_UNIFORM_LIGHTDIRECTION9,
	LIREN_UNIFORM_LIGHTDIRECTIONPREMULT0,
	LIREN_UNIFORM_LIGHTDIRECTIONPREMULT1,
	LIREN_UNIFORM_LIGHTDIRECTIONPREMULT2,
	LIREN_UNIFORM_LIGHTDIRECTIONPREMULT3,
	LIREN_UNIFORM_LIGHTDIRECTIONPREMULT4,
	LIREN_UNIFORM_LIGHTDIRECTIONPREMULT5,
	LIREN_UNIFORM_LIGHTDIRECTIONPREMULT6,
	LIREN_UNIFORM_LIGHTDIRECTIONPREMULT7,
	LIREN_UNIFORM_LIGHTDIRECTIONPREMULT8,
	LIREN_UNIFORM_LIGHTDIRECTIONPREMULT9,
	LIREN_UNIFORM_LIGHTEQUATION0,
	LIREN_UNIFORM_LIGHTEQUATION1,
	LIREN_UNIFORM_LIGHTEQUATION2,
	LIREN_UNIFORM_LIGHTEQUATION3,
	LIREN_UNIFORM_LIGHTEQUATION4,
	LIREN_UNIFORM_LIGHTEQUATION5,
	LIREN_UNIFORM_LIGHTEQUATION6,
	LIREN_UNIFORM_LIGHTEQUATION7,
	LIREN_UNIFORM_LIGHTEQUATION8,
	LIREN_UNIFORM_LIGHTEQUATION9,
	LIREN_UNIFORM_LIGHTMATRIX0,
	LIREN_UNIFORM_LIGHTMATRIX1,
	LIREN_UNIFORM_LIGHTMATRIX2,
	LIREN_UNIFORM_LIGHTMATRIX3,
	LIREN_UNIFORM_LIGHTMATRIX4,
	LIREN_UNIFORM_LIGHTMATRIX5,
	LIREN_UNIFORM_LIGHTMATRIX6,
	LIREN_UNIFORM_LIGHTMATRIX7,
	LIREN_UNIFORM_LIGHTMATRIX8,
	LIREN_UNIFORM_LIGHTMATRIX9,
	LIREN_UNIFORM_LIGHTPOSITION0,
	LIREN_UNIFORM_LIGHTPOSITION1,
	LIREN_UNIFORM_LIGHTPOSITION2,
	LIREN_UNIFORM_LIGHTPOSITION3,
	LIREN_UNIFORM_LIGHTPOSITION4,
	LIREN_UNIFORM_LIGHTPOSITION5,
	LIREN_UNIFORM_LIGHTPOSITION6,
	LIREN_UNIFORM_LIGHTPOSITION7,
	LIREN_UNIFORM_LIGHTPOSITION8,
	LIREN_UNIFORM_LIGHTPOSITION9,
	LIREN_UNIFORM_LIGHTPOSITIONPREMULT0,
	LIREN_UNIFORM_LIGHTPOSITIONPREMULT1,
	LIREN_UNIFORM_LIGHTPOSITIONPREMULT2,
	LIREN_UNIFORM_LIGHTPOSITIONPREMULT3,
	LIREN_UNIFORM_LIGHTPOSITIONPREMULT4,
	LIREN_UNIFORM_LIGHTPOSITIONPREMULT5,
	LIREN_UNIFORM_LIGHTPOSITIONPREMULT6,
	LIREN_UNIFORM_LIGHTPOSITIONPREMULT7,
	LIREN_UNIFORM_LIGHTPOSITIONPREMULT8,
	LIREN_UNIFORM_LIGHTPOSITIONPREMULT9,
	LIREN_UNIFORM_LIGHTSPECULAR0,
	LIREN_UNIFORM_LIGHTSPECULAR1,
	LIREN_UNIFORM_LIGHTSPECULAR2,
	LIREN_UNIFORM_LIGHTSPECULAR3,
	LIREN_UNIFORM_LIGHTSPECULAR4,
	LIREN_UNIFORM_LIGHTSPECULAR5,
	LIREN_UNIFORM_LIGHTSPECULAR6,
	LIREN_UNIFORM_LIGHTSPECULAR7,
	LIREN_UNIFORM_LIGHTSPECULAR8,
	LIREN_UNIFORM_LIGHTSPECULAR9,
	LIREN_UNIFORM_LIGHTSPOT0,
	LIREN_UNIFORM_LIGHTSPOT1,
	LIREN_UNIFORM_LIGHTSPOT2,
	LIREN_UNIFORM_LIGHTSPOT3,
	LIREN_UNIFORM_LIGHTSPOT4,
	LIREN_UNIFORM_LIGHTSPOT5,
	LIREN_UNIFORM_LIGHTSPOT6,
	LIREN_UNIFORM_LIGHTSPOT7,
	LIREN_UNIFORM_LIGHTSPOT8,
	LIREN_UNIFORM_LIGHTSPOT9,
	LIREN_UNIFORM_LIGHTTYPE0,
	LIREN_UNIFORM_LIGHTTYPE1,
	LIREN_UNIFORM_LIGHTTYPE2,
	LIREN_UNIFORM_LIGHTTYPE3,
	LIREN_UNIFORM_LIGHTTYPE4,
	LIREN_UNIFORM_LIGHTTYPE5,
	LIREN_UNIFORM_LIGHTTYPE6,
	LIREN_UNIFORM_LIGHTTYPE7,
	LIREN_UNIFORM_LIGHTTYPE8,
	LIREN_UNIFORM_LIGHTTYPE9,
	LIREN_UNIFORM_MATERIALDIFFUSE,
	LIREN_UNIFORM_MATERIALSHININESS,
	LIREN_UNIFORM_MATERIALSPECULAR,
	LIREN_UNIFORM_MATRIXMODEL,
	LIREN_UNIFORM_MATRIXMODELVIEW,
	LIREN_UNIFORM_MATRIXMODELVIEWINVERSE,
	LIREN_UNIFORM_MATRIXMODELVIEWPROJECTION,
	LIREN_UNIFORM_MATRIXNORMAL,
	LIREN_UNIFORM_MATRIXPROJECTION,
	LIREN_UNIFORM_MATRIXPROJECTIONINVERSE,
	LIREN_UNIFORM_NOISETEXTURE,
	LIREN_UNIFORM_PARAM0,
	LIREN_UNIFORM_SHADOWTEXTURE0,
	LIREN_UNIFORM_SHADOWTEXTURE1,
	LIREN_UNIFORM_SHADOWTEXTURE2,
	LIREN_UNIFORM_SHADOWTEXTURE3,
	LIREN_UNIFORM_SHADOWTEXTURE4,
	LIREN_UNIFORM_SHADOWTEXTURE5,
	LIREN_UNIFORM_SHADOWTEXTURE6,
	LIREN_UNIFORM_SHADOWTEXTURE7,
	LIREN_UNIFORM_SHADOWTEXTURE8,
	LIREN_UNIFORM_SHADOWTEXTURE9,
	LIREN_UNIFORM_TIME
};

enum
{
	LIREN_UNIFORM_LIGHTTYPE_DISABLED    = 0,
	LIREN_UNIFORM_LIGHTTYPE_DIRECTIONAL = 1,
	LIREN_UNIFORM_LIGHTTYPE_POINT       = 2,
	LIREN_UNIFORM_LIGHTTYPE_SPOT        = 3,
	LIREN_UNIFORM_LIGHTTYPE_SPOTSHADOW  = 4
};

typedef struct _LIRenUniform LIRenUniform;
struct _LIRenUniform
{
	char* name;
	GLint binding;
	GLint sampler;
	int value;
};

static inline int
liren_uniform_get_sampler (LIRenUniform* self)
{
	if (self->value >= LIREN_UNIFORM_CUBETEXTURE0 &&
	    self->value <= LIREN_UNIFORM_CUBETEXTURE9)
		return 1;
	if (self->value >= LIREN_UNIFORM_DIFFUSETEXTURE0 &&
	    self->value <= LIREN_UNIFORM_DIFFUSETEXTURE9)
		return 1;
	if (self->value == LIREN_UNIFORM_NOISETEXTURE)
		return 1;
	if (self->value >= LIREN_UNIFORM_SHADOWTEXTURE0 &&
	    self->value <= LIREN_UNIFORM_SHADOWTEXTURE9)
		return 1;
	return 0;
}

#endif
